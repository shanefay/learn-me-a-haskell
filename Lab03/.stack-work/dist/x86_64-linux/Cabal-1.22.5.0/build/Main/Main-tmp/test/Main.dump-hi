
==================== FINAL INTERFACE ====================
2016-11-27 15:11:28.763551 UTC

interface main@main:Main 7103
  interface hash: 3ec9f70066de879f7cb26c65b490083b
  ABI hash: 24271e88543f829fba9be629b014d56f
  export-list hash: 50c6a715904aff0d87a444d20cb57d53
  orphan hash: c9bcfc19710e893662eb2a8cc355708e
  flag hash: aaa2f55c6b419ab4e57c475cae6e0745
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.main
  Main.test_insert_br_new
  Main.test_insert_br_old
  Main.test_insert_emp
  Main.test_insert_leaf
  Main.test_lkp_branch
  Main.test_lkp_emp
  Main.test_lkp_leaf_fail
  Main.test_lkp_leaf_ok
  Main.test_map_branch
  Main.test_map_emp
  Main.test_map_leaf
  Main.test_show_br_emp_a1
  Main.test_show_br_left_a1_b2
  Main.test_show_br_right_a1_b2
  Main.test_show_empty
  Main.test_show_emptyX4
  Main.test_show_leaf_1a
  Main.test_show_leaf_a1
  Main.tests
module dependencies: Lab03
package dependencies: HUnit-1.3.1.2@HUnit_AzBU5jSVcUy6oxicItOe0b
                      QuickCheck-2.8.2@Quick_6TxL5Cx3o2p0HsyT59KWiD
                      ansi-terminal-0.6.2.3@ansit_BDlVdfJGo3VHCIHxPTNjH1
                      ansi-wl-pprint-0.6.7.3@ansiw_KTAhiPa3RNI09mbeoAwSSX
                      array-0.5.1.0@array_67iodizgJQIIxYVTp4emlA base-4.8.2.0
                      binary-0.7.5.0@binar_3uXFWMoAGBg0xKP9MHKRwi
                      bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6
                      containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU
                      deepseq-1.4.1.1@deeps_6vMKxt5sPFR0XsbRWvvq59 ghc-prim-0.4.0.0
                      hostname-1.0@hostn_3HfIQy11Ojb2in3623bzR3 integer-gmp-1.0.0.0
                      primitive-0.6.1.0@primi_EphY2c7CCxSCBKjAN0YTR3
                      random-1.1@rando_9Kgekc9yEaLHLNUuw6paWL
                      regex-base-0.93.2@regex_47KXx9dLqeO8MNJeizLKhP
                      regex-posix-0.95.2@regex_ClFHQvfj6rtJ1Pxo4OAy89
                      test-framework-quickcheck2-0.3.0.3@testf_1ho9w8SmwvV7ao9mE3ZaRC
                      test-framework-0.8.1.1@testf_B1MVPJUrcmB7HNAGf4Uv93
                      test-framework-hunit-0.3.0.2@testf_EptgaRzrQ5a5FsSX1777nM
                      text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne
                      tf-random-0.5@tfran_1eLmkn3WUnC8NZpPuDLGKF
                      time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn
                      transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF
                      xml-1.3.14@xml_AyrkYt7P0aQDgNiMBs2bvw
orphans: base-4.8.2.0:GHC.Base base-4.8.2.0:GHC.Float
         binary-0.7.5.0@binar_3uXFWMoAGBg0xKP9MHKRwi:Data.Binary.Generic
         bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6:Data.ByteString.Builder
         regex-base-0.93.2@regex_47KXx9dLqeO8MNJeizLKhP:Text.Regex.Base.Context
         regex-posix-0.95.2@regex_ClFHQvfj6rtJ1Pxo4OAy89:Text.Regex.Posix.String
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Lazy
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Show
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.Calendar.Gregorian
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.Format.Parse
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.LocalTime.LocalTime
         transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF:Control.Monad.Trans.Error
family instance modules: base-4.8.2.0:Control.Applicative
                         base-4.8.2.0:Data.Either base-4.8.2.0:Data.Functor.Identity
                         base-4.8.2.0:Data.Monoid base-4.8.2.0:Data.Type.Equality
                         base-4.8.2.0:Data.Void base-4.8.2.0:GHC.Exts
                         base-4.8.2.0:GHC.Generics
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.IntMap.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.IntSet.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Map.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Sequence
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Set.Base
                         primitive-0.6.1.0@primi_EphY2c7CCxSCBKjAN0YTR3:Control.Monad.Primitive
                         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text
                         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Lazy
import  -/  HUnit-1.3.1.2@HUnit_AzBU5jSVcUy6oxicItOe0b:Test.HUnit 66bcf89478e54cab0bc320939852d08e
import  -/  HUnit-1.3.1.2@HUnit_AzBU5jSVcUy6oxicItOe0b:Test.HUnit.Base 05e3acf3b4a0039179fededbe30715ce
import  -/  base-4.8.2.0:Data.Char c8f827952d4111ae2e47c0b105217cdb
import  -/  base-4.8.2.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.2.0:GHC.Char 612e350e38947989d78fc181dfd596f1
import  -/  base-4.8.2.0:GHC.Show 0e1d8380a8fb0cfb07ebeda3b70cbf38
import  -/  base-4.8.2.0:Prelude 694dcaf039efe62df1c44834e2dbd2fb
import  -/  Lab03 405283961e619d4390674e9fc4512bf6
  exports: cbafb1abd4d0443843a30a499c628d25
  BinTree a710a0bb5cc37625953ae48973bac86a
  Branch 1159bd7df963be7e1360c03e94ae34d0
  Empty 73c501bd44eb9264a7c39069f5e802f2
  Leaf 8508d51ce698f3a0571262713f366946
  alphaChr 6fca3362d024d607c5671d3c94ff96c2
  alphaOrd 53567c94e094b683d3bb701d3a7f786c
  br_emp_a1 c6eac135a275f3b39764e2a10db2c558
  br_left_a1_b2 5dc0fbb46d5725f28b4672d5ad8cfc62
  br_right_a1_b2 c37279c8573fced6bfb48ac3f419c887
  empCI 129d74c2788b9a1c7b6129b45b913932
  empIC 7f61a195ae24ff619b5ebc407034131a
  emptyX4 22fc85c81739cc579c69cc7f60ef1020
  ins1 7c3796dcf4cfc261659ff131a33910ca
  ins2 d94827be14215478f0f48b5f25ae5da9
  ins3 87266c107dbc3a27fedd6186c2d68bc1
  ins4 baf31303ae59c5a675a70b04f3ffaa9f
  leaf_1a cdbc736920688c33294e846efd9a0ee1
  leaf_2b d654c20ea150983ae004f0517040e777
  leaf_a1 8f11e886dd9a6c94f682b2717415acb0
  leaf_b2 53d576289ba8996b54868cc060fa8ded
  treeLookup 55d4a26fbe3bfc3072af7ce1d3f0495a
  treeMap 774213b4ba7db2f58be6ef3375ea6376
import  -/  test-framework-quickcheck2-0.3.0.3@testf_1ho9w8SmwvV7ao9mE3ZaRC:Test.Framework.Providers.QuickCheck2 f581717353d83c62095d8ecb8a5d4d4b
import  -/  test-framework-0.8.1.1@testf_B1MVPJUrcmB7HNAGf4Uv93:Test.Framework f67b2d8241bfa35267aad2e4a4b76ee9
import  -/  test-framework-0.8.1.1@testf_B1MVPJUrcmB7HNAGf4Uv93:Test.Framework.Core f433b65c2544657a20d68fe310c8026a
import  -/  test-framework-0.8.1.1@testf_B1MVPJUrcmB7HNAGf4Uv93:Test.Framework.Runners.Console a28542c59ee3219b6b399e1f9a2c960c
import  -/  test-framework-hunit-0.3.0.2@testf_EptgaRzrQ5a5FsSX1777nM:Test.Framework.Providers.HUnit 5a7012f0903213dc7b92550390342c68
142bb26121483b9c6e5c4a134cd003b6
  $s$fEqBinTree ::
    GHC.Classes.Eq (Lab03.BinTree GHC.Types.Int [GHC.Types.Int])
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Lab03.BinTree GHC.Types.Int [GHC.Types.Int])
                  (Lab03.$fEqBinTree_$c==
                     @ GHC.Types.Int
                     @ [GHC.Types.Int]
                     GHC.Classes.$fEqInt
                     GHC.Classes.$fEq[]_$s$fEq[])
                  Main.$s$fEqBinTree1 -}
0aa777480d7d254b030e732f9d309bb4
  $s$fEqBinTree1 ::
    Lab03.BinTree GHC.Types.Int [GHC.Types.Int]
    -> Lab03.BinTree GHC.Types.Int [GHC.Types.Int] -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ a :: Lab03.BinTree GHC.Types.Int [GHC.Types.Int]
                   b :: Lab03.BinTree GHC.Types.Int [GHC.Types.Int] ->
                 case Lab03.$fEqBinTree_$c==
                        @ GHC.Types.Int
                        @ [GHC.Types.Int]
                        GHC.Classes.$fEqInt
                        GHC.Classes.$fEq[]_$s$fEq[]
                        a
                        b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
82a66728b217609ac44c6e8100f09f65
  $s$fEqBinTree2 ::
    GHC.Classes.Eq (Lab03.BinTree GHC.Types.Int GHC.Types.Char)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Lab03.BinTree GHC.Types.Int GHC.Types.Char)
                  (Lab03.$fEqBinTree_$c==
                     @ GHC.Types.Int
                     @ GHC.Types.Char
                     GHC.Classes.$fEqInt
                     GHC.Classes.$fEqChar)
                  Main.$s$fEqBinTree3 -}
c9806fa90ca4a2c7c495c942f5ce39ff
  $s$fEqBinTree3 ::
    Lab03.BinTree GHC.Types.Int GHC.Types.Char
    -> Lab03.BinTree GHC.Types.Int GHC.Types.Char -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ a :: Lab03.BinTree GHC.Types.Int GHC.Types.Char
                   b :: Lab03.BinTree GHC.Types.Int GHC.Types.Char ->
                 case Lab03.$fEqBinTree_$c==
                        @ GHC.Types.Int
                        @ GHC.Types.Char
                        GHC.Classes.$fEqInt
                        GHC.Classes.$fEqChar
                        a
                        b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
f1570a4c3d4a485d73cad501f196497c
  $s$fEqBinTree4 ::
    GHC.Classes.Eq (Lab03.BinTree GHC.Types.Char GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Lab03.BinTree GHC.Types.Char GHC.Types.Int)
                  (Lab03.$fEqBinTree_$c==
                     @ GHC.Types.Char
                     @ GHC.Types.Int
                     GHC.Classes.$fEqChar
                     GHC.Classes.$fEqInt)
                  Main.$s$fEqBinTree5 -}
edb6465b66389000eab347dc4477c09a
  $s$fEqBinTree5 ::
    Lab03.BinTree GHC.Types.Char GHC.Types.Int
    -> Lab03.BinTree GHC.Types.Char GHC.Types.Int -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ a :: Lab03.BinTree GHC.Types.Char GHC.Types.Int
                   b :: Lab03.BinTree GHC.Types.Char GHC.Types.Int ->
                 case Lab03.$fEqBinTree_$c==
                        @ GHC.Types.Char
                        @ GHC.Types.Int
                        GHC.Classes.$fEqChar
                        GHC.Classes.$fEqInt
                        a
                        b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
f89e2dc2d4678185ab1378a155291c8b
  $s$fEqMaybe :: GHC.Classes.Eq (GHC.Base.Maybe GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (GHC.Base.Maybe GHC.Types.Int)
                  Main.$s$fEqMaybe1
                  (GHC.Base.$fEqMaybe_$c/= @ GHC.Types.Int GHC.Classes.$fEqInt) -}
f424f16db69205d8f2e5f596f54823e1
  $s$fEqMaybe1 ::
    GHC.Base.Maybe GHC.Types.Int
    -> GHC.Base.Maybe GHC.Types.Int -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ ds :: GHC.Base.Maybe GHC.Types.Int
                   ds1 :: GHC.Base.Maybe GHC.Types.Int ->
                 case ds of wild {
                   GHC.Base.Nothing
                   -> case ds1 of wild1 {
                        GHC.Base.Nothing -> GHC.Types.True
                        GHC.Base.Just ipv -> GHC.Types.False }
                   GHC.Base.Just a1
                   -> case ds1 of wild1 {
                        GHC.Base.Nothing -> GHC.Types.False
                        GHC.Base.Just b1 -> GHC.Classes.eqInt a1 b1 } }) -}
f3e382719a90cb22bf59ea9a4f17456c
  $s$fShowBinTree ::
    GHC.Show.Show (Lab03.BinTree GHC.Types.Int [GHC.Types.Int])
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Lab03.BinTree GHC.Types.Int [GHC.Types.Int])
                  Main.$s$fShowBinTree2
                  Main.$s$fShowBinTree1
                  (Lab03.$fShowBinTree_$cshowList
                     @ GHC.Types.Int
                     @ [GHC.Types.Int]
                     GHC.Show.$fShowInt
                     GHC.Show.$fShow[]_$s$fShow[]) -}
977f861a07ef8ac13697a5a9b6ccd2d6
  $s$fShowBinTree1 ::
    Lab03.BinTree GHC.Types.Int [GHC.Types.Int] -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ eta :: Lab03.BinTree GHC.Types.Int [GHC.Types.Int] ->
                 Lab03.$wtreeShow
                   @ GHC.Types.Int
                   @ [GHC.Types.Int]
                   GHC.Show.$fShowInt
                   GHC.Show.$fShow[]_$s$fShow[]
                   eta) -}
aea486f321a3811a445bea0ec4d54d13
  $s$fShowBinTree2 ::
    GHC.Types.Int
    -> Lab03.BinTree GHC.Types.Int [GHC.Types.Int] -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ ds :: GHC.Types.Int
                   x :: Lab03.BinTree GHC.Types.Int [GHC.Types.Int]
                   s :: GHC.Base.String ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b c :: GHC.Types.Char -> b -> b[OneShot] n :: b[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Char
                      @ b
                      c
                      n
                      (Lab03.$wtreeShow
                         @ GHC.Types.Int
                         @ [GHC.Types.Int]
                         GHC.Show.$fShowInt
                         GHC.Show.$fShow[]_$s$fShow[]
                         x))
                   s) -}
b9b8aac4017459e70613edc6d459a40f
  $s$fShowBinTree3 ::
    GHC.Show.Show (Lab03.BinTree GHC.Types.Int GHC.Types.Char)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Lab03.BinTree GHC.Types.Int GHC.Types.Char)
                  Main.$s$fShowBinTree5
                  Main.$s$fShowBinTree4
                  (Lab03.$fShowBinTree_$cshowList
                     @ GHC.Types.Int
                     @ GHC.Types.Char
                     GHC.Show.$fShowInt
                     GHC.Show.$fShowChar) -}
b9d3e7f574d8c700eae58cb387c30725
  $s$fShowBinTree4 ::
    Lab03.BinTree GHC.Types.Int GHC.Types.Char -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ eta :: Lab03.BinTree GHC.Types.Int GHC.Types.Char ->
                 Lab03.$wtreeShow
                   @ GHC.Types.Int
                   @ GHC.Types.Char
                   GHC.Show.$fShowInt
                   GHC.Show.$fShowChar
                   eta) -}
7fdc4d5decf25d6c05851349413717d6
  $s$fShowBinTree5 ::
    GHC.Types.Int
    -> Lab03.BinTree GHC.Types.Int GHC.Types.Char -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ ds :: GHC.Types.Int
                   x :: Lab03.BinTree GHC.Types.Int GHC.Types.Char
                   s :: GHC.Base.String ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b c :: GHC.Types.Char -> b -> b[OneShot] n :: b[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Char
                      @ b
                      c
                      n
                      (Lab03.$wtreeShow
                         @ GHC.Types.Int
                         @ GHC.Types.Char
                         GHC.Show.$fShowInt
                         GHC.Show.$fShowChar
                         x))
                   s) -}
4aa39cface76e68b753f72e1c89460c2
  $s$fShowBinTree6 ::
    GHC.Show.Show (Lab03.BinTree GHC.Types.Char GHC.Types.Int)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Lab03.BinTree GHC.Types.Char GHC.Types.Int)
                  Main.$s$fShowBinTree8
                  Main.$s$fShowBinTree7
                  (Lab03.$fShowBinTree_$cshowList
                     @ GHC.Types.Char
                     @ GHC.Types.Int
                     GHC.Show.$fShowChar
                     GHC.Show.$fShowInt) -}
12f4753e84c2ea22b9a13d5f0910fce0
  $s$fShowBinTree7 ::
    Lab03.BinTree GHC.Types.Char GHC.Types.Int -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ eta :: Lab03.BinTree GHC.Types.Char GHC.Types.Int ->
                 Lab03.$wtreeShow
                   @ GHC.Types.Char
                   @ GHC.Types.Int
                   GHC.Show.$fShowChar
                   GHC.Show.$fShowInt
                   eta) -}
ece5da17e82f3853408cbe949eeb853c
  $s$fShowBinTree8 ::
    GHC.Types.Int
    -> Lab03.BinTree GHC.Types.Char GHC.Types.Int -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ ds :: GHC.Types.Int
                   x :: Lab03.BinTree GHC.Types.Char GHC.Types.Int
                   s :: GHC.Base.String ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b c :: GHC.Types.Char -> b -> b[OneShot] n :: b[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Char
                      @ b
                      c
                      n
                      (Lab03.$wtreeShow
                         @ GHC.Types.Char
                         @ GHC.Types.Int
                         GHC.Show.$fShowChar
                         GHC.Show.$fShowInt
                         x))
                   s) -}
2edd78cece7f0bde71bf2a97b8d48d06
  $s$fShowMaybe :: GHC.Show.Show (GHC.Base.Maybe GHC.Types.Int)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (GHC.Base.Maybe GHC.Types.Int)
                  (GHC.Show.$fShowMaybe_$cshowsPrec
                     @ GHC.Types.Int
                     GHC.Show.$fShowInt)
                  (GHC.Show.$fShowMaybe_$cshow @ GHC.Types.Int GHC.Show.$fShowInt)
                  Main.$s$fShowMaybe1 -}
34b1d8bad451a916aeb230bcf8ea34fb
  $s$fShowMaybe1 :: [GHC.Base.Maybe GHC.Types.Int] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta :: [GHC.Base.Maybe GHC.Types.Int] eta1 :: GHC.Base.String ->
                 GHC.Show.showList__
                   @ (GHC.Base.Maybe GHC.Types.Int)
                   (GHC.Show.$fShowMaybe_$cshowsPrec
                      @ GHC.Types.Int
                      GHC.Show.$fShowInt
                      GHC.Show.shows18)
                   eta
                   eta1) -}
f18758078a45eb4bd0201051573fb03d
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
2ea3cad6bc5e3d96a2fa09c3f079b70a
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case System.Environment.getArgs1 eta of ds1 { (#,#) ipv ipv1 ->
                 case Test.Framework.Runners.Console.defaultMain7
                        ipv1
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case Test.Framework.Runners.Console.defaultMain4
                        ipv3
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case ipv5 of ww { Test.Framework.Runners.Options.RunnerOptions ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ->
                 Test.Framework.Runners.Console.$wa
                   Main.tests
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ipv4 } } } }) -}
9bc965c1a9ca370fb545cc1ef2f5cc84
  main2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R))) -}
fc328d4202b8125849cbd840966d4f4f
  test_insert_br_new :: Test.HUnit.Lang.Assertion
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.tests88 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
1a1ade4de12e2e36bc22f1b4ddf4752c
  test_insert_br_old :: Test.HUnit.Lang.Assertion
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.tests72 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
bee67fde85a5c3e5a2457a80fdfee602
  test_insert_emp :: Test.HUnit.Lang.Assertion
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.tests111 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
5b683d267bd4049b883e5ece036f3141
  test_insert_leaf :: Test.HUnit.Lang.Assertion
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.tests100 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
cec6be7f6c4d6fec4c0d7ea24652b4e5
  test_lkp_branch :: Test.HUnit.Lang.Assertion
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.tests10 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
684d03e25e47c4169910cfead565a930
  test_lkp_emp :: Test.HUnit.Lang.Assertion
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.tests55 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
1212041e5d609409b7fda8a432f5d6d1
  test_lkp_leaf_fail :: Test.HUnit.Lang.Assertion
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.tests43 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
4beafdbc44fcc94c343fb354b7b02bae
  test_lkp_leaf_ok :: Test.HUnit.Lang.Assertion
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.tests29 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
5f1f066e9a439e69e386637a4853b257
  test_map_branch :: Test.HUnit.Lang.Assertion
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.tests126 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
9d78bf3e76d8eb16e7e9f3b680506a54
  test_map_emp :: Test.HUnit.Lang.Assertion
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.tests154 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
09f2e239cd282c25188612c9e808f97c
  test_map_leaf :: Test.HUnit.Lang.Assertion
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.tests142 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
c3ebc5382ea0a12d9e1e75ef26375c53
  test_show_br_emp_a1 :: Test.HUnit.Lang.Assertion
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.tests207 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
0f49b4ae487cc6640518e6836d42cc3f
  test_show_br_left_a1_b2 :: Test.HUnit.Lang.Assertion
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.tests194 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
d7cfbb7fd9a3edb19e6b7921bcbbf607
  test_show_br_right_a1_b2 :: Test.HUnit.Lang.Assertion
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.tests183 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
7557ca4a1ea1b1e4386fa0580e078c17
  test_show_empty :: Test.HUnit.Lang.Assertion
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.tests241 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
80cf8258af22c82fc018682c4ba30c73
  test_show_emptyX4 :: Test.HUnit.Lang.Assertion
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.tests172 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
dc8ca02b55dfa9a9e489a685baec7a89
  test_show_leaf_1a :: Test.HUnit.Lang.Assertion
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.tests218 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
de874316feeff22bee593a8327fd522e
  test_show_leaf_a1 :: Test.HUnit.Lang.Assertion
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.tests230 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
f38b9641ebd81027443a51fc28502ee9
  tests :: [Test.Framework.Core.Test]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Framework.Core.Test
                   Main.tests163
                   Main.tests1) -}
3a5b58ee9a2be4cd0bac324aa014d2fc
  tests1 :: [Test.Framework.Core.Test]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Framework.Core.Test
                   Main.tests121
                   Main.tests2) -}
16bb06b4c646c84e9c0f65460095e765
  tests10 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ eta2 :: GHC.Prim.State#
                             GHC.Prim.RealWorld[OneShot] ->
                 Test.HUnit.Base.@=?7
                   @ (GHC.Base.Maybe GHC.Types.Int)
                   Main.tests15
                     `cast`
                   (Sym (GHC.IP.NTCo:IP[0] <"loc">_N <GHC.Stack.CallStack>_N))
                   Main.$s$fEqMaybe
                   Main.$s$fShowMaybe
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.tests13
                   Main.tests11
                   eta2) -}
62f383ca8c68554eb3c401cf30f5e14d
  tests100 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ eta2 :: GHC.Prim.State#
                             GHC.Prim.RealWorld[OneShot] ->
                 Test.HUnit.Base.@=?7
                   @ (Lab03.BinTree GHC.Types.Char GHC.Types.Int)
                   Main.tests102
                     `cast`
                   (Sym (GHC.IP.NTCo:IP[0] <"loc">_N <GHC.Stack.CallStack>_N))
                   Main.$s$fEqBinTree4
                   Main.$s$fShowBinTree6
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.tests101
                   Lab03.ins2
                   eta2) -}
dc21df6b4f7e75bfab3c7cb066e68dec
  tests101 :: Lab03.BinTree GHC.Types.Char GHC.Types.Int
  {- HasNoCafRefs,
     Unfolding: (Lab03.Branch
                   @ GHC.Types.Char
                   @ GHC.Types.Int
                   Main.tests91
                   Main.tests75
                   Main.tests74
                   (Lab03.Empty @ GHC.Types.Char @ GHC.Types.Int)) -}
149fad89bc223f07a09e512359cf9507
  tests102 :: GHC.Stack.CallStack
  {- Unfolding: (GHC.Stack.CallStack Main.tests103) -}
7f1f4f72d7edffffe55458ac7fc59702
  tests103 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Test.HUnit.Base.@?=2
                   Main.tests104) -}
bd960ec829132a3dd8a72894d36341c6
  tests104 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Main.tests105
                   (GHC.Types.[] @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc))) -}
01736cc6d4a2360324b006035b0f2a8c
  tests105 :: ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
  {- Unfolding: ((Main.tests26, Main.tests106)) -}
d5d4c225fe1f4350ec0124ae4636f91f
  tests106 :: GHC.SrcLoc.SrcLoc
  {- Unfolding: (GHC.SrcLoc.SrcLoc
                   Main.tests25
                   Main.tests24
                   Main.tests23
                   Main.tests21
                   Main.tests108
                   Main.tests21
                   Main.tests107) -}
641c3c465bb7f42dd7366f036a7ca404
  tests107 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 28) -}
174e7a4cdbfa19c0eb907d98fb58e861
  tests108 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 25) -}
bf63532fc3780585fde409d11dddb4c9
  tests109 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Insert Leaf {1 mark}"#) -}
d2f7c50f18adf7b952a9fe6bb970349e
  tests11 :: GHC.Base.Maybe GHC.Types.Int
  {- Unfolding: (Lab03.treeLookup
                   @ GHC.Types.Char
                   @ GHC.Types.Int
                   GHC.Classes.$fOrdChar
                   Main.tests12
                   Lab03.ins4) -}
31146b6afa6dd60064486dcab1382de2
  tests110 :: Test.Framework.Core.Test
  {- Unfolding: (Test.Framework.Core.Test
                   @ Test.Framework.Providers.HUnit.TestCaseRunning
                   @ Test.Framework.Providers.HUnit.TestCaseResult
                   @ Test.Framework.Providers.HUnit.TestCase
                   Test.Framework.Providers.HUnit.$fTestlikeTestCaseRunningTestCaseResultTestCase
                   Test.Framework.Providers.HUnit.testCase1
                     `cast`
                   (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                             <*>_N <Test.Framework.Providers.HUnit.TestCase>_N))
                   Main.tests119
                   Main.tests111
                     `cast`
                   (Trans
                        (Sym (GHC.Types.NTCo:IO[0] <()>_R))
                        (Sym (Test.Framework.Providers.HUnit.NTCo:TestCase[0])))) -}
7423a8fb8f85154bb4153ce161618c7d
  tests111 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ eta2 :: GHC.Prim.State#
                             GHC.Prim.RealWorld[OneShot] ->
                 Test.HUnit.Base.@=?7
                   @ (Lab03.BinTree GHC.Types.Char GHC.Types.Int)
                   Main.tests112
                     `cast`
                   (Sym (GHC.IP.NTCo:IP[0] <"loc">_N <GHC.Stack.CallStack>_N))
                   Main.$s$fEqBinTree4
                   Main.$s$fShowBinTree6
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.tests91
                   Lab03.ins1
                   eta2) -}
73be3c11022b8ebd20322129e16411e1
  tests112 :: GHC.Stack.CallStack
  {- Unfolding: (GHC.Stack.CallStack Main.tests113) -}
ceb37990b4562064a04985664b9b11f8
  tests113 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Test.HUnit.Base.@?=2
                   Main.tests114) -}
ae7a74cb347d4263033f4699d1f1803c
  tests114 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Main.tests115
                   (GHC.Types.[] @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc))) -}
51b4f96eb54584496b949c8f71b9333d
  tests115 :: ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
  {- Unfolding: ((Main.tests26, Main.tests116)) -}
5cb18ef603f80f813e78da56fef6f7cf
  tests116 :: GHC.SrcLoc.SrcLoc
  {- Unfolding: (GHC.SrcLoc.SrcLoc
                   Main.tests25
                   Main.tests24
                   Main.tests23
                   Main.tests118
                   Main.tests117
                   Main.tests118
                   Main.tests84) -}
33bb6d538cc19f37deebf7c75e125932
  tests117 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 24) -}
06c19554e00d31df9d78bbbf7f2ea411
  tests118 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 38) -}
8eb9bad9506aae6acfb4787d66ce41ed
  tests119 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Insert Empty {1 mark}"#) -}
48e3070dcd8b63cc1542a99e53fbb362
  tests12 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 'c') -}
fff6073d4fbce882bce7669368816d2c
  tests120 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Insert Tests (5 marks)"#) -}
f6abeddf4450af1688f46e71caf8a549
  tests121 :: Test.Framework.Core.Test
  {- Strictness: m2,
     Unfolding: (Test.Framework.Core.TestGroup
                   Main.tests162
                   Main.tests122) -}
6eaeac6f4225b323266c4226b5e049d4
  tests122 :: [Test.Framework.Core.Test]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Framework.Core.Test
                   Main.tests153
                   Main.tests123) -}
1dd31e3b2d6897d7f96495ffafe628c3
  tests123 :: [Test.Framework.Core.Test]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Framework.Core.Test
                   Main.tests141
                   Main.tests124) -}
71c85a34127719ca9610fce7ab62cdec
  tests124 :: [Test.Framework.Core.Test]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Framework.Core.Test
                   Main.tests125
                   (GHC.Types.[] @ Test.Framework.Core.Test)) -}
3136a3780b8dd826ac2aec090618df47
  tests125 :: Test.Framework.Core.Test
  {- Unfolding: (Test.Framework.Core.Test
                   @ Test.Framework.Providers.HUnit.TestCaseRunning
                   @ Test.Framework.Providers.HUnit.TestCaseResult
                   @ Test.Framework.Providers.HUnit.TestCase
                   Test.Framework.Providers.HUnit.$fTestlikeTestCaseRunningTestCaseResultTestCase
                   Test.Framework.Providers.HUnit.testCase1
                     `cast`
                   (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                             <*>_N <Test.Framework.Providers.HUnit.TestCase>_N))
                   Main.tests140
                   Main.tests126
                     `cast`
                   (Trans
                        (Sym (GHC.Types.NTCo:IO[0] <()>_R))
                        (Sym (Test.Framework.Providers.HUnit.NTCo:TestCase[0])))) -}
ecef77e763708ecedfe70f0821a1d199
  tests126 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ eta2 :: GHC.Prim.State#
                             GHC.Prim.RealWorld[OneShot] ->
                 Test.HUnit.Base.@=?7
                   @ (Lab03.BinTree GHC.Types.Int [GHC.Types.Int])
                   Main.tests132
                     `cast`
                   (Sym (GHC.IP.NTCo:IP[0] <"loc">_N <GHC.Stack.CallStack>_N))
                   Main.$s$fEqBinTree
                   Main.$s$fShowBinTree
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.tests131
                   Main.tests127
                   eta2) -}
84a9690b27403036a072ad9ecf6320a5
  tests127 :: Lab03.BinTree GHC.Types.Int [GHC.Types.Int]
  {- Unfolding: (Lab03.treeMap
                   @ ()
                   @ GHC.Types.Int
                   @ ()
                   @ [GHC.Types.Int]
                   Main.tests129
                   Main.tests128
                   Lab03.emptyX4) -}
a09c45146ac496a57ffbd84f89526bcb
  tests128 :: () -> [GHC.Types.Int]
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ ds :: () -> GHC.Types.[] @ GHC.Types.Int) -}
d8e761f0caa12d58e7be1ff170f5f4fa
  tests129 :: () -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ ds :: () -> Main.tests130) -}
b4e0953b06a72b5008101ddabd2a2c64
  tests13 :: GHC.Base.Maybe GHC.Types.Int
  {- HasNoCafRefs,
     Unfolding: (GHC.Base.Just @ GHC.Types.Int Main.tests14) -}
42eca3c382cb4f3f18d2fb93b04e51b3
  tests130 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0) -}
5162b4b280c39c01d5bcda990739f300
  tests131 :: Lab03.BinTree GHC.Types.Int [GHC.Types.Int]
  {- HasNoCafRefs,
     Unfolding: (Lab03.Branch
                   @ GHC.Types.Int
                   @ [GHC.Types.Int]
                   (Main.tests_nullX2 @ GHC.Types.Int)
                   Main.tests130
                   (GHC.Types.[] @ GHC.Types.Int)
                   (Main.tests_nullX2 @ GHC.Types.Int)) -}
193cb4094ddba0340e384c7efd107c04
  tests132 :: GHC.Stack.CallStack
  {- Unfolding: (GHC.Stack.CallStack Main.tests133) -}
01632d3382968199a73308f7c2199ceb
  tests133 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Test.HUnit.Base.@?=2
                   Main.tests134) -}
6b50694da27731885a13e708d003c88c
  tests134 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Main.tests135
                   (GHC.Types.[] @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc))) -}
0c6d9c0e5b154dfe538cab98f45ff0ac
  tests135 :: ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
  {- Unfolding: ((Main.tests26, Main.tests136)) -}
42c17b6f1e0c4df5b88685d9d52dc188
  tests136 :: GHC.SrcLoc.SrcLoc
  {- Unfolding: (GHC.SrcLoc.SrcLoc
                   Main.tests25
                   Main.tests24
                   Main.tests23
                   Main.tests139
                   Main.tests138
                   Main.tests139
                   Main.tests137) -}
e9a0b0d5a5aea9fb8214e6303b59a7b9
  tests137 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 8) -}
a0aa74a85cd199ec785736c9aeb0d2f4
  tests138 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 5) -}
c0f21a079f78ad1b169b65f9b7d53dba
  tests139 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 32) -}
4053c38a5e12acdc336e250b7df449e9
  tests14 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 99) -}
7cc276b0fae983f275c63f70e5f49b49
  tests140 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Map Branch {1 mark}"#) -}
3d8e8aafaf6e5a0812162d12a36f729a
  tests141 :: Test.Framework.Core.Test
  {- Unfolding: (Test.Framework.Core.Test
                   @ Test.Framework.Providers.HUnit.TestCaseRunning
                   @ Test.Framework.Providers.HUnit.TestCaseResult
                   @ Test.Framework.Providers.HUnit.TestCase
                   Test.Framework.Providers.HUnit.$fTestlikeTestCaseRunningTestCaseResultTestCase
                   Test.Framework.Providers.HUnit.testCase1
                     `cast`
                   (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                             <*>_N <Test.Framework.Providers.HUnit.TestCase>_N))
                   Main.tests152
                   Main.tests142
                     `cast`
                   (Trans
                        (Sym (GHC.Types.NTCo:IO[0] <()>_R))
                        (Sym (Test.Framework.Providers.HUnit.NTCo:TestCase[0])))) -}
adc291747444bf7143111607b721f9a0
  tests142 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ eta2 :: GHC.Prim.State#
                             GHC.Prim.RealWorld[OneShot] ->
                 Test.HUnit.Base.@=?7
                   @ (Lab03.BinTree GHC.Types.Int GHC.Types.Char)
                   Main.tests144
                     `cast`
                   (Sym (GHC.IP.NTCo:IP[0] <"loc">_N <GHC.Stack.CallStack>_N))
                   Main.$s$fEqBinTree2
                   Main.$s$fShowBinTree3
                   (GHC.Types.[] @ GHC.Types.Char)
                   Lab03.leaf_2b
                   Main.tests143
                   eta2) -}
aa1aeaf82bc35e9dcd722c9ded70b6c4
  tests143 :: Lab03.BinTree GHC.Types.Int GHC.Types.Char
  {- Unfolding: (Lab03.treeMap
                   @ GHC.Types.Char
                   @ GHC.Types.Int
                   @ GHC.Types.Int
                   @ GHC.Types.Char
                   Lab03.alphaOrd
                   Lab03.alphaChr
                   Lab03.leaf_b2) -}
931f6ed470c6b49270642d974e825d2b
  tests144 :: GHC.Stack.CallStack
  {- Unfolding: (GHC.Stack.CallStack Main.tests145) -}
3633d7b04da315455ca589d61db36153
  tests145 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Test.HUnit.Base.@?=2
                   Main.tests146) -}
a9e6524943d167a8b0c6fcb8c2073dcb
  tests146 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Main.tests147
                   (GHC.Types.[] @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc))) -}
7a121a16f5b6c0f60d82e70fdcffdb92
  tests147 :: ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
  {- Unfolding: ((Main.tests26, Main.tests148)) -}
c042a7c5c0d3ab3cbe246e52a874f661
  tests148 :: GHC.SrcLoc.SrcLoc
  {- Unfolding: (GHC.SrcLoc.SrcLoc
                   Main.tests25
                   Main.tests24
                   Main.tests23
                   Main.tests151
                   Main.tests150
                   Main.tests151
                   Main.tests149) -}
f98cd40ff18421aea6e13f0619678b7d
  tests149 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 54) -}
9325d0d856a1eba817bdd5f2f1cfc040
  tests15 :: GHC.Stack.CallStack
  {- Unfolding: (GHC.Stack.CallStack Main.tests16) -}
07fc528fac4d8ba0d085515c4bd234da
  tests150 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 51) -}
68788abc5286b74a792e06bb0d4b4d20
  tests151 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 29) -}
0d800552a80a5a9af7134cf48acc3877
  tests152 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Map Leaf {1 mark}"#) -}
23bbf29f4509412ccdf6506849f00fb6
  tests153 :: Test.Framework.Core.Test
  {- Unfolding: (Test.Framework.Core.Test
                   @ Test.Framework.Providers.HUnit.TestCaseRunning
                   @ Test.Framework.Providers.HUnit.TestCaseResult
                   @ Test.Framework.Providers.HUnit.TestCase
                   Test.Framework.Providers.HUnit.$fTestlikeTestCaseRunningTestCaseResultTestCase
                   Test.Framework.Providers.HUnit.testCase1
                     `cast`
                   (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                             <*>_N <Test.Framework.Providers.HUnit.TestCase>_N))
                   Main.tests161
                   Main.tests154
                     `cast`
                   (Trans
                        (Sym (GHC.Types.NTCo:IO[0] <()>_R))
                        (Sym (Test.Framework.Providers.HUnit.NTCo:TestCase[0])))) -}
3f4351d11ead82a27b79ab80749a7eb5
  tests154 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ eta2 :: GHC.Prim.State#
                             GHC.Prim.RealWorld[OneShot] ->
                 Test.HUnit.Base.@=?7
                   @ (Lab03.BinTree GHC.Types.Int GHC.Types.Char)
                   Main.tests156
                     `cast`
                   (Sym (GHC.IP.NTCo:IP[0] <"loc">_N <GHC.Stack.CallStack>_N))
                   Main.$s$fEqBinTree2
                   Main.$s$fShowBinTree3
                   (GHC.Types.[] @ GHC.Types.Char)
                   (Lab03.Empty @ GHC.Types.Int @ GHC.Types.Char)
                   Main.tests155
                   eta2) -}
4f495c0c94669ddb63ebde6e68d485a7
  tests155 :: Lab03.BinTree GHC.Types.Int GHC.Types.Char
  {- Unfolding: (Lab03.treeMap
                   @ GHC.Types.Char
                   @ GHC.Types.Int
                   @ GHC.Types.Int
                   @ GHC.Types.Char
                   GHC.Base.ord
                   GHC.Char.chr
                   (Lab03.Empty @ GHC.Types.Char @ GHC.Types.Int)) -}
d62895955dfb2ea682cd09657ca21043
  tests156 :: GHC.Stack.CallStack
  {- Unfolding: (GHC.Stack.CallStack Main.tests157) -}
74b1678d2bd8ad1d6730d9647ad41b5f
  tests157 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Test.HUnit.Base.@?=2
                   Main.tests158) -}
2526cab88e610acf7f03eb89e6a171be
  tests158 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Main.tests159
                   (GHC.Types.[] @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc))) -}
bc549028ff2c648c7e4c115f22abfe45
  tests159 :: ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
  {- Unfolding: ((Main.tests26, Main.tests160)) -}
5cea6d27228662024f5949706d928378
  tests16 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Test.HUnit.Base.@?=2
                   Main.tests17) -}
4d6bcf1f698e8574554df6987ae090a6
  tests160 :: GHC.SrcLoc.SrcLoc
  {- Unfolding: (GHC.SrcLoc.SrcLoc
                   Main.tests25
                   Main.tests24
                   Main.tests23
                   Main.tests107
                   Main.tests118
                   Main.tests107
                   Main.tests85) -}
971ebe6cb567b610ee7e9ec89df19bc1
  tests161 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Map Empty {1 mark}"#) -}
c8a5afd2db958a5b32a2319ffb6c5f21
  tests162 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Map Tests (3 marks)"#) -}
5ed9c44f3a40a1764b75f92e09185b04
  tests163 :: Test.Framework.Core.Test
  {- Strictness: m2,
     Unfolding: (Test.Framework.Core.TestGroup
                   Main.tests252
                   Main.tests164) -}
04c12a9c82888582a12a56c327baf94f
  tests164 :: [Test.Framework.Core.Test]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Framework.Core.Test
                   Main.tests240
                   Main.tests165) -}
45e6778d9cf3f0f621ae93eda78d12d6
  tests165 :: [Test.Framework.Core.Test]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Framework.Core.Test
                   Main.tests229
                   Main.tests166) -}
fc4adeddcc9d0cef142134fdf28c74fa
  tests166 :: [Test.Framework.Core.Test]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Framework.Core.Test
                   Main.tests217
                   Main.tests167) -}
a12ae0cc0ee3b75759561ac1fcedb921
  tests167 :: [Test.Framework.Core.Test]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Framework.Core.Test
                   Main.tests206
                   Main.tests168) -}
cc6a17d6019318d348894222b76aeb55
  tests168 :: [Test.Framework.Core.Test]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Framework.Core.Test
                   Main.tests193
                   Main.tests169) -}
f7963159c3543ea815ff992194c944b0
  tests169 :: [Test.Framework.Core.Test]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Framework.Core.Test
                   Main.tests182
                   Main.tests170) -}
1e177774e978f0cfab657be84c4b7c2f
  tests17 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Main.tests18
                   (GHC.Types.[] @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc))) -}
843617189cd9a6d64c57602a2e8e86c5
  tests170 :: [Test.Framework.Core.Test]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Framework.Core.Test
                   Main.tests171
                   (GHC.Types.[] @ Test.Framework.Core.Test)) -}
a4cf814778fe08f5db2b66d9751ee684
  tests171 :: Test.Framework.Core.Test
  {- Unfolding: (Test.Framework.Core.Test
                   @ Test.Framework.Providers.HUnit.TestCaseRunning
                   @ Test.Framework.Providers.HUnit.TestCaseResult
                   @ Test.Framework.Providers.HUnit.TestCase
                   Test.Framework.Providers.HUnit.$fTestlikeTestCaseRunningTestCaseResultTestCase
                   Test.Framework.Providers.HUnit.testCase1
                     `cast`
                   (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                             <*>_N <Test.Framework.Providers.HUnit.TestCase>_N))
                   Main.tests181
                   Main.tests172
                     `cast`
                   (Trans
                        (Sym (GHC.Types.NTCo:IO[0] <()>_R))
                        (Sym (Test.Framework.Providers.HUnit.NTCo:TestCase[0])))) -}
814ecaf428a2a9ceb52b3e4db551407b
  tests172 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ eta2 :: GHC.Prim.State#
                             GHC.Prim.RealWorld[OneShot] ->
                 Test.HUnit.Base.@=?7
                   @ GHC.Base.String
                   Main.tests175
                     `cast`
                   (Sym (GHC.IP.NTCo:IP[0] <"loc">_N <GHC.Stack.CallStack>_N))
                   GHC.Classes.$fEq[]_$s$fEq[]1
                   GHC.Show.$fShow[]_$s$fShow[]1
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.tests174
                   Main.tests173
                   eta2) -}
c6034895e71f5d3a28f48e02b556c061
  tests173 :: GHC.Base.String
  {- Unfolding: (Lab03.$wtreeShow
                   @ ()
                   @ ()
                   GHC.Show.$fShow()
                   GHC.Show.$fShow()
                   Lab03.emptyX4) -}
d58c7104b32c085858d874bb8fc3f3dc
  tests174 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Branch (Branch Empty () () Empty) () () (Branch Empty () () Empty)"#) -}
9f0412638bb115aa6cffd0afc71b903e
  tests175 :: GHC.Stack.CallStack
  {- Unfolding: (GHC.Stack.CallStack Main.tests176) -}
5738b754c376accc501c2b46ca77ee85
  tests176 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Test.HUnit.Base.@?=2
                   Main.tests177) -}
6a53418a8bd72effb78aa0b2988a590d
  tests177 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Main.tests178
                   (GHC.Types.[] @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc))) -}
c22cb88c4a86593ef74b2a367dd0eb98
  tests178 :: ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
  {- Unfolding: ((Main.tests26, Main.tests179)) -}
6e314f1cc790d2703b0f3e617e09a141
  tests179 :: GHC.SrcLoc.SrcLoc
  {- Unfolding: (GHC.SrcLoc.SrcLoc
                   Main.tests25
                   Main.tests24
                   Main.tests23
                   Main.tests108
                   Main.tests74
                   Main.tests108
                   Main.tests180) -}
560f7f9d5b0c3bb96476e1b7a85907fd
  tests18 :: ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
  {- Unfolding: ((Main.tests26, Main.tests19)) -}
f8cdbec5e23631acaa3d0ca8d8751897
  tests180 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 7) -}
3381d685735f4de2c93de0425b9725b7
  tests181 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Show Empty X 4 {2 marks}"#) -}
f343b618a4365f76e5f2891cfaa9be0e
  tests182 :: Test.Framework.Core.Test
  {- Unfolding: (Test.Framework.Core.Test
                   @ Test.Framework.Providers.HUnit.TestCaseRunning
                   @ Test.Framework.Providers.HUnit.TestCaseResult
                   @ Test.Framework.Providers.HUnit.TestCase
                   Test.Framework.Providers.HUnit.$fTestlikeTestCaseRunningTestCaseResultTestCase
                   Test.Framework.Providers.HUnit.testCase1
                     `cast`
                   (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                             <*>_N <Test.Framework.Providers.HUnit.TestCase>_N))
                   Main.tests192
                   Main.tests183
                     `cast`
                   (Trans
                        (Sym (GHC.Types.NTCo:IO[0] <()>_R))
                        (Sym (Test.Framework.Providers.HUnit.NTCo:TestCase[0])))) -}
bf24e85d5cec97c9be86b0a75037912e
  tests183 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ eta2 :: GHC.Prim.State#
                             GHC.Prim.RealWorld[OneShot] ->
                 Test.HUnit.Base.@=?7
                   @ GHC.Base.String
                   Main.tests186
                     `cast`
                   (Sym (GHC.IP.NTCo:IP[0] <"loc">_N <GHC.Stack.CallStack>_N))
                   GHC.Classes.$fEq[]_$s$fEq[]1
                   GHC.Show.$fShow[]_$s$fShow[]1
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.tests185
                   Main.tests184
                   eta2) -}
c94b9fafb601e84294498657eec6d83b
  tests184 :: GHC.Base.String
  {- Unfolding: (Lab03.$wtreeShow
                   @ GHC.Types.Char
                   @ GHC.Types.Int
                   GHC.Show.$fShowChar
                   GHC.Show.$fShowInt
                   Lab03.br_right_a1_b2) -}
44b154a0f3da1b57aa17b9c2909ffd1f
  tests185 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Branch Empty 'a' 1 (Leaf 'b' 2)"#) -}
a7a1d5230f13b593cc51d7775f6c7238
  tests186 :: GHC.Stack.CallStack
  {- Unfolding: (GHC.Stack.CallStack Main.tests187) -}
27cd2f55ea845013927a87965c0274e9
  tests187 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Test.HUnit.Base.@?=2
                   Main.tests188) -}
eb63938bd2a3d72bd7f2f2603a16e60e
  tests188 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Main.tests189
                   (GHC.Types.[] @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc))) -}
126c3fd5b315f4c3d8cd17292ef1b975
  tests189 :: ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
  {- Unfolding: ((Main.tests26, Main.tests190)) -}
34b81e231e59850c26730670fb9412d7
  tests19 :: GHC.SrcLoc.SrcLoc
  {- Unfolding: (GHC.SrcLoc.SrcLoc
                   Main.tests25
                   Main.tests24
                   Main.tests23
                   Main.tests22
                   Main.tests21
                   Main.tests22
                   Main.tests20) -}
855118b5d03b3ab12cd19d705ed60fc2
  tests190 :: GHC.SrcLoc.SrcLoc
  {- Unfolding: (GHC.SrcLoc.SrcLoc
                   Main.tests25
                   Main.tests24
                   Main.tests23
                   Main.tests191
                   Main.tests117
                   Main.tests191
                   Main.tests84) -}
69b3ebf8a67e5a6a3a5cef4e76a0a4f4
  tests191 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 22) -}
5ec6018f974ea3fb17d027265261f662
  tests192 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Show Br Right a 1 b 2 {1 mark}"#) -}
3e1140404ef8798153b38005a4090c9b
  tests193 :: Test.Framework.Core.Test
  {- Unfolding: (Test.Framework.Core.Test
                   @ Test.Framework.Providers.HUnit.TestCaseRunning
                   @ Test.Framework.Providers.HUnit.TestCaseResult
                   @ Test.Framework.Providers.HUnit.TestCase
                   Test.Framework.Providers.HUnit.$fTestlikeTestCaseRunningTestCaseResultTestCase
                   Test.Framework.Providers.HUnit.testCase1
                     `cast`
                   (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                             <*>_N <Test.Framework.Providers.HUnit.TestCase>_N))
                   Main.tests205
                   Main.tests194
                     `cast`
                   (Trans
                        (Sym (GHC.Types.NTCo:IO[0] <()>_R))
                        (Sym (Test.Framework.Providers.HUnit.NTCo:TestCase[0])))) -}
65da6298ac34eb04134462b6c023b432
  tests194 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ eta2 :: GHC.Prim.State#
                             GHC.Prim.RealWorld[OneShot] ->
                 Test.HUnit.Base.@=?7
                   @ GHC.Base.String
                   Main.tests197
                     `cast`
                   (Sym (GHC.IP.NTCo:IP[0] <"loc">_N <GHC.Stack.CallStack>_N))
                   GHC.Classes.$fEq[]_$s$fEq[]1
                   GHC.Show.$fShow[]_$s$fShow[]1
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.tests196
                   Main.tests195
                   eta2) -}
453b019daea43251506e14555531cd60
  tests195 :: GHC.Base.String
  {- Unfolding: (Lab03.$wtreeShow
                   @ GHC.Types.Char
                   @ GHC.Types.Int
                   GHC.Show.$fShowChar
                   GHC.Show.$fShowInt
                   Lab03.br_left_a1_b2) -}
11bdbf6189f0b4fe548511c2414f17f6
  tests196 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Branch (Leaf 'a' 1) 'b' 2 Empty"#) -}
eda40bdae8ff21ebe33cd7ff624f1ed0
  tests197 :: GHC.Stack.CallStack
  {- Unfolding: (GHC.Stack.CallStack Main.tests198) -}
3088636eb742861f223c178b25f8a932
  tests198 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Test.HUnit.Base.@?=2
                   Main.tests199) -}
6fb498c768f9da093e999c984b6f3185
  tests199 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Main.tests200
                   (GHC.Types.[] @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc))) -}
2fb248069ee4b3423e22c19e6d00514c
  tests2 :: [Test.Framework.Core.Test]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Framework.Core.Test
                   Main.tests66
                   Main.tests3) -}
a9fbac71e8d8648c58e2539bbc1afd9d
  tests20 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 42) -}
f9f431d67f8a56f50290b4a500624159
  tests200 :: ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
  {- Unfolding: ((Main.tests26, Main.tests201)) -}
1726654b7bb08214177eee407bc278ef
  tests201 :: GHC.SrcLoc.SrcLoc
  {- Unfolding: (GHC.SrcLoc.SrcLoc
                   Main.tests25
                   Main.tests24
                   Main.tests23
                   Main.tests204
                   Main.tests203
                   Main.tests204
                   Main.tests202) -}
2e64d2ee9ed4adbdbebcf54ef07e010d
  tests202 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 26) -}
35bb004efc9084ef2f2f896ef563b6b9
  tests203 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 23) -}
65f6bdf9e7acdcef35c4e0d023aa5826
  tests204 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 20) -}
e98e9ca9412e50ea48f129537adf9588
  tests205 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Show Br Left a 1 b 2 {1 mark}"#) -}
7cee60fb68f5c301acdb02238fe7e01b
  tests206 :: Test.Framework.Core.Test
  {- Unfolding: (Test.Framework.Core.Test
                   @ Test.Framework.Providers.HUnit.TestCaseRunning
                   @ Test.Framework.Providers.HUnit.TestCaseResult
                   @ Test.Framework.Providers.HUnit.TestCase
                   Test.Framework.Providers.HUnit.$fTestlikeTestCaseRunningTestCaseResultTestCase
                   Test.Framework.Providers.HUnit.testCase1
                     `cast`
                   (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                             <*>_N <Test.Framework.Providers.HUnit.TestCase>_N))
                   Main.tests216
                   Main.tests207
                     `cast`
                   (Trans
                        (Sym (GHC.Types.NTCo:IO[0] <()>_R))
                        (Sym (Test.Framework.Providers.HUnit.NTCo:TestCase[0])))) -}
70e12130aea604624fba9f9443b02642
  tests207 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ eta2 :: GHC.Prim.State#
                             GHC.Prim.RealWorld[OneShot] ->
                 Test.HUnit.Base.@=?7
                   @ GHC.Base.String
                   Main.tests210
                     `cast`
                   (Sym (GHC.IP.NTCo:IP[0] <"loc">_N <GHC.Stack.CallStack>_N))
                   GHC.Classes.$fEq[]_$s$fEq[]1
                   GHC.Show.$fShow[]_$s$fShow[]1
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.tests209
                   Main.tests208
                   eta2) -}
a3467d773122163badd5f48b03a9ff4a
  tests208 :: GHC.Base.String
  {- Unfolding: (Lab03.$wtreeShow
                   @ GHC.Types.Char
                   @ GHC.Types.Int
                   GHC.Show.$fShowChar
                   GHC.Show.$fShowInt
                   Lab03.br_emp_a1) -}
89261c5d67181923533a1b7defd9973a
  tests209 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Branch Empty 'a' 1 Empty"#) -}
5a112a1a3ae90f26b103b70634825d44
  tests21 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 39) -}
0859145c197c5ba1db363f91608221cf
  tests210 :: GHC.Stack.CallStack
  {- Unfolding: (GHC.Stack.CallStack Main.tests211) -}
6f19dc3484dd8647c5066e85d6958e08
  tests211 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Test.HUnit.Base.@?=2
                   Main.tests212) -}
a810e7c88c20f6e7c409341561f65e14
  tests212 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Main.tests213
                   (GHC.Types.[] @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc))) -}
b3e8f8096d398f5d412e2dae36299b0a
  tests213 :: ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
  {- Unfolding: ((Main.tests26, Main.tests214)) -}
fc23f78667a01b61694323bcba125f49
  tests214 :: GHC.SrcLoc.SrcLoc
  {- Unfolding: (GHC.SrcLoc.SrcLoc
                   Main.tests25
                   Main.tests24
                   Main.tests23
                   Main.tests215
                   Main.tests118
                   Main.tests215
                   Main.tests85) -}
7be830dbbf33bdd8c4266a7eebcbf239
  tests215 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 18) -}
d1571f405a683893df132ef0f1053941
  tests216 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Show Br Empty a 1 {1 mark}"#) -}
31b4f223279725b275725b469bac28c3
  tests217 :: Test.Framework.Core.Test
  {- Unfolding: (Test.Framework.Core.Test
                   @ Test.Framework.Providers.HUnit.TestCaseRunning
                   @ Test.Framework.Providers.HUnit.TestCaseResult
                   @ Test.Framework.Providers.HUnit.TestCase
                   Test.Framework.Providers.HUnit.$fTestlikeTestCaseRunningTestCaseResultTestCase
                   Test.Framework.Providers.HUnit.testCase1
                     `cast`
                   (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                             <*>_N <Test.Framework.Providers.HUnit.TestCase>_N))
                   Main.tests228
                   Main.tests218
                     `cast`
                   (Trans
                        (Sym (GHC.Types.NTCo:IO[0] <()>_R))
                        (Sym (Test.Framework.Providers.HUnit.NTCo:TestCase[0])))) -}
f2423ecda47264d8b3c6e70e04feb2cc
  tests218 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ eta2 :: GHC.Prim.State#
                             GHC.Prim.RealWorld[OneShot] ->
                 Test.HUnit.Base.@=?7
                   @ GHC.Base.String
                   Main.tests221
                     `cast`
                   (Sym (GHC.IP.NTCo:IP[0] <"loc">_N <GHC.Stack.CallStack>_N))
                   GHC.Classes.$fEq[]_$s$fEq[]1
                   GHC.Show.$fShow[]_$s$fShow[]1
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.tests220
                   Main.tests219
                   eta2) -}
a9cc8930c8b60059846d107bc1745c9e
  tests219 :: GHC.Base.String
  {- Unfolding: (Lab03.$wtreeShow
                   @ GHC.Types.Int
                   @ GHC.Types.Char
                   GHC.Show.$fShowInt
                   GHC.Show.$fShowChar
                   Lab03.leaf_1a) -}
3429da0e192a460fa7a28a4b5faa76bb
  tests22 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 46) -}
a458fc5b9fcd4ad08acfbc0d56ab197c
  tests220 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Leaf 1 'a'"#) -}
a416f9be38519329b7fab482d45f255f
  tests221 :: GHC.Stack.CallStack
  {- Unfolding: (GHC.Stack.CallStack Main.tests222) -}
21ec4cda5229e72f5c2591787c86490d
  tests222 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Test.HUnit.Base.@?=2
                   Main.tests223) -}
ac71ad743d60b35709882611363bc5c9
  tests223 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Main.tests224
                   (GHC.Types.[] @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc))) -}
aba6c080ae26db81940eab6915833fbe
  tests224 :: ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
  {- Unfolding: ((Main.tests26, Main.tests225)) -}
4cd46600cb271624975c514ef6e2f42d
  tests225 :: GHC.SrcLoc.SrcLoc
  {- Unfolding: (GHC.SrcLoc.SrcLoc
                   Main.tests25
                   Main.tests24
                   Main.tests23
                   Main.tests227
                   Main.tests226
                   Main.tests227
                   Main.tests63) -}
1466974205619bfd5e8f7c9af114afb4
  tests226 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 34) -}
0d5b134eaf0d9d0b66540755e30e72a9
  tests227 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 17) -}
bb88aab71554e5d679d96576c7c9b484
  tests228 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Show Leaf 1 a {1 mark}"#) -}
5f825ab9f22a7b8de89b8239b1f712c5
  tests229 :: Test.Framework.Core.Test
  {- Unfolding: (Test.Framework.Core.Test
                   @ Test.Framework.Providers.HUnit.TestCaseRunning
                   @ Test.Framework.Providers.HUnit.TestCaseResult
                   @ Test.Framework.Providers.HUnit.TestCase
                   Test.Framework.Providers.HUnit.$fTestlikeTestCaseRunningTestCaseResultTestCase
                   Test.Framework.Providers.HUnit.testCase1
                     `cast`
                   (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                             <*>_N <Test.Framework.Providers.HUnit.TestCase>_N))
                   Main.tests239
                   Main.tests230
                     `cast`
                   (Trans
                        (Sym (GHC.Types.NTCo:IO[0] <()>_R))
                        (Sym (Test.Framework.Providers.HUnit.NTCo:TestCase[0])))) -}
4894043e7f2c80fa01b74918dc8a38ca
  tests23 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "test/Main.hs"#) -}
960be8dd0d4a572ed6aeedd5b300513b
  tests230 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ eta2 :: GHC.Prim.State#
                             GHC.Prim.RealWorld[OneShot] ->
                 Test.HUnit.Base.@=?7
                   @ GHC.Base.String
                   Main.tests233
                     `cast`
                   (Sym (GHC.IP.NTCo:IP[0] <"loc">_N <GHC.Stack.CallStack>_N))
                   GHC.Classes.$fEq[]_$s$fEq[]1
                   GHC.Show.$fShow[]_$s$fShow[]1
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.tests232
                   Main.tests231
                   eta2) -}
7610030a8159b866bd4e7908f887e444
  tests231 :: GHC.Base.String
  {- Unfolding: (Lab03.$wtreeShow
                   @ GHC.Types.Char
                   @ GHC.Types.Int
                   GHC.Show.$fShowChar
                   GHC.Show.$fShowInt
                   Lab03.leaf_a1) -}
a6abe5769d119101707be012c7ccd234
  tests232 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Leaf 'a' 1"#) -}
a91af848d9628247e5f5c0271dc144b2
  tests233 :: GHC.Stack.CallStack
  {- Unfolding: (GHC.Stack.CallStack Main.tests234) -}
4db0731cbf265d8f8d3c96c423e4ab2b
  tests234 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Test.HUnit.Base.@?=2
                   Main.tests235) -}
01d80812de18e401d071598e23196b79
  tests235 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Main.tests236
                   (GHC.Types.[] @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc))) -}
b106e01fb07de5b161579c90134a2d04
  tests236 :: ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
  {- Unfolding: ((Main.tests26, Main.tests237)) -}
b8351772a65d3d8e3924dba2bc7da93c
  tests237 :: GHC.SrcLoc.SrcLoc
  {- Unfolding: (GHC.SrcLoc.SrcLoc
                   Main.tests25
                   Main.tests24
                   Main.tests23
                   Main.tests238
                   Main.tests226
                   Main.tests238
                   Main.tests63) -}
13850923f163874958d78e897aa5c799
  tests238 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 16) -}
2b849b86239a1f8cb731ed695209a3e2
  tests239 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Show Leaf a 1 {1 mark}"#) -}
5a361147df52d794adc72438aa6632a6
  tests24 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Main"#) -}
6ac5d8654cf5c0ad3086f319c2f6a7fd
  tests240 :: Test.Framework.Core.Test
  {- Unfolding: (Test.Framework.Core.Test
                   @ Test.Framework.Providers.HUnit.TestCaseRunning
                   @ Test.Framework.Providers.HUnit.TestCaseResult
                   @ Test.Framework.Providers.HUnit.TestCase
                   Test.Framework.Providers.HUnit.$fTestlikeTestCaseRunningTestCaseResultTestCase
                   Test.Framework.Providers.HUnit.testCase1
                     `cast`
                   (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                             <*>_N <Test.Framework.Providers.HUnit.TestCase>_N))
                   Main.tests251
                   Main.tests241
                     `cast`
                   (Trans
                        (Sym (GHC.Types.NTCo:IO[0] <()>_R))
                        (Sym (Test.Framework.Providers.HUnit.NTCo:TestCase[0])))) -}
ef9541d120a2e991925414c58bb2e59c
  tests241 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ eta2 :: GHC.Prim.State#
                             GHC.Prim.RealWorld[OneShot] ->
                 Test.HUnit.Base.@=?7
                   @ GHC.Base.String
                   Main.tests244
                     `cast`
                   (Sym (GHC.IP.NTCo:IP[0] <"loc">_N <GHC.Stack.CallStack>_N))
                   GHC.Classes.$fEq[]_$s$fEq[]1
                   GHC.Show.$fShow[]_$s$fShow[]1
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.tests243
                   Main.tests242
                   eta2) -}
ee8480dd9e3c099ac0a635252615100a
  tests242 :: GHC.Base.String
  {- Unfolding: (Lab03.$wtreeShow
                   @ GHC.Types.Char
                   @ GHC.Types.Int
                   GHC.Show.$fShowChar
                   GHC.Show.$fShowInt
                   (Lab03.Empty @ GHC.Types.Char @ GHC.Types.Int)) -}
994d9759bbc0dc66efbc098345e75c5e
  tests243 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Empty"#) -}
663b1aae813bacb106296407a2e88260
  tests244 :: GHC.Stack.CallStack
  {- Unfolding: (GHC.Stack.CallStack Main.tests245) -}
e727db93207d9ac5e0350e3e7b520065
  tests245 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Test.HUnit.Base.@?=2
                   Main.tests246) -}
874d69e2badc2cd66663d26ed62ab8c4
  tests246 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Main.tests247
                   (GHC.Types.[] @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc))) -}
d79b5c93550406581d34d1a3587c280d
  tests247 :: ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
  {- Unfolding: ((Main.tests26, Main.tests248)) -}
e70757c4da68132a75678c48773ef026
  tests248 :: GHC.SrcLoc.SrcLoc
  {- Unfolding: (GHC.SrcLoc.SrcLoc
                   Main.tests25
                   Main.tests24
                   Main.tests23
                   Main.tests250
                   Main.tests249
                   Main.tests250
                   Main.tests226) -}
4705e78c1db1760c96bd9a9359ae60d0
  tests249 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 31) -}
a00dfce072c667c4b46e4bfd44036a86
  tests25 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "main"#) -}
23645b0b28951088c2e4bff9e3a32b25
  tests250 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 15) -}
97870c19e104ad8c9fc631079e87f24d
  tests251 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Show Empty {1 mark}"#) -}
10f9db5f01729f45c2178ce7f7a259c1
  tests252 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "\n\
                   \Total Marks Available: 20\n\
                   \Show Tests (8 marks)"#) -}
12bd92aeb6b3e73cedf744bacbdbfa08
  tests26 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "@?="#) -}
a136540ddabeddfa4ee71fed5db4a84f
  tests27 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Lookup Branch {1 mark}"#) -}
9b1c5a86ac692690a0ea2dcb15274889
  tests28 :: Test.Framework.Core.Test
  {- Unfolding: (Test.Framework.Core.Test
                   @ Test.Framework.Providers.HUnit.TestCaseRunning
                   @ Test.Framework.Providers.HUnit.TestCaseResult
                   @ Test.Framework.Providers.HUnit.TestCase
                   Test.Framework.Providers.HUnit.$fTestlikeTestCaseRunningTestCaseResultTestCase
                   Test.Framework.Providers.HUnit.testCase1
                     `cast`
                   (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                             <*>_N <Test.Framework.Providers.HUnit.TestCase>_N))
                   Main.tests41
                   Main.tests29
                     `cast`
                   (Trans
                        (Sym (GHC.Types.NTCo:IO[0] <()>_R))
                        (Sym (Test.Framework.Providers.HUnit.NTCo:TestCase[0])))) -}
445144a6f9d665583ac25ce0dce57aa2
  tests29 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ eta2 :: GHC.Prim.State#
                             GHC.Prim.RealWorld[OneShot] ->
                 Test.HUnit.Base.@=?7
                   @ (GHC.Base.Maybe GHC.Types.Int)
                   Main.tests34
                     `cast`
                   (Sym (GHC.IP.NTCo:IP[0] <"loc">_N <GHC.Stack.CallStack>_N))
                   Main.$s$fEqMaybe
                   Main.$s$fShowMaybe
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.tests32
                   Main.tests30
                   eta2) -}
b9b36e015b9334990ac108031a9a3c08
  tests3 :: [Test.Framework.Core.Test]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Framework.Core.Test
                   Main.tests4
                   (GHC.Types.[] @ Test.Framework.Core.Test)) -}
b0eac20b9e43326c7e15b0e78d9434f8
  tests30 :: GHC.Base.Maybe GHC.Types.Int
  {- Unfolding: (Lab03.treeLookup
                   @ GHC.Types.Char
                   @ GHC.Types.Int
                   GHC.Classes.$fOrdChar
                   Main.tests31
                   Lab03.leaf_b2) -}
4c63f99302d81e475933c762b5c60591
  tests31 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 'b') -}
26683830b3a8d69e361b4acd2926e73e
  tests32 :: GHC.Base.Maybe GHC.Types.Int
  {- HasNoCafRefs,
     Unfolding: (GHC.Base.Just @ GHC.Types.Int Main.tests33) -}
c102075259155efbb9ef3aa85526dd44
  tests33 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 2) -}
8e9979e78d28e5bac7f8ddfcbe76e585
  tests34 :: GHC.Stack.CallStack
  {- Unfolding: (GHC.Stack.CallStack Main.tests35) -}
3bd421c72be923b05a42b31c139f10c0
  tests35 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Test.HUnit.Base.@?=2
                   Main.tests36) -}
60efceb0128017edc290d7d8754c86b0
  tests36 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Main.tests37
                   (GHC.Types.[] @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc))) -}
5e8df1d42f723ee12c0ea64780f2754d
  tests37 :: ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
  {- Unfolding: ((Main.tests26, Main.tests38)) -}
1819f720f75d7c4ca24bc2944229d813
  tests38 :: GHC.SrcLoc.SrcLoc
  {- Unfolding: (GHC.SrcLoc.SrcLoc
                   Main.tests25
                   Main.tests24
                   Main.tests23
                   Main.tests40
                   Main.tests39
                   Main.tests40
                   Main.tests22) -}
8a862b6e4a444fbc8e27892e8afe9957
  tests39 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 43) -}
3781ab58cd55be7ecd63b2c0f7a5693d
  tests4 :: Test.Framework.Core.Test
  {- Strictness: m2,
     Unfolding: (Test.Framework.Core.TestGroup
                   Main.tests65
                   Main.tests5) -}
9539ab384191d689a2ddb63428057bd9
  tests40 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 45) -}
86ad9be6095095da61b8dc45856ccfac
  tests41 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Lookup Leaf (Ok) {1 mark}"#) -}
01634f5ad3fb729a72fd33f1c2e99b26
  tests42 :: Test.Framework.Core.Test
  {- Unfolding: (Test.Framework.Core.Test
                   @ Test.Framework.Providers.HUnit.TestCaseRunning
                   @ Test.Framework.Providers.HUnit.TestCaseResult
                   @ Test.Framework.Providers.HUnit.TestCase
                   Test.Framework.Providers.HUnit.$fTestlikeTestCaseRunningTestCaseResultTestCase
                   Test.Framework.Providers.HUnit.testCase1
                     `cast`
                   (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                             <*>_N <Test.Framework.Providers.HUnit.TestCase>_N))
                   Main.tests53
                   Main.tests43
                     `cast`
                   (Trans
                        (Sym (GHC.Types.NTCo:IO[0] <()>_R))
                        (Sym (Test.Framework.Providers.HUnit.NTCo:TestCase[0])))) -}
0eb752c1f71f90d3306e1127a0fce4c1
  tests43 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ eta2 :: GHC.Prim.State#
                             GHC.Prim.RealWorld[OneShot] ->
                 Test.HUnit.Base.@=?7
                   @ (GHC.Base.Maybe GHC.Types.Int)
                   Main.tests46
                     `cast`
                   (Sym (GHC.IP.NTCo:IP[0] <"loc">_N <GHC.Stack.CallStack>_N))
                   Main.$s$fEqMaybe
                   Main.$s$fShowMaybe
                   (GHC.Types.[] @ GHC.Types.Char)
                   (GHC.Base.Nothing @ GHC.Types.Int)
                   Main.tests44
                   eta2) -}
b413286d6274f53786a9f816c902a7dd
  tests44 :: GHC.Base.Maybe GHC.Types.Int
  {- Unfolding: (Lab03.treeLookup
                   @ GHC.Types.Char
                   @ GHC.Types.Int
                   GHC.Classes.$fOrdChar
                   Main.tests45
                   Lab03.leaf_b2) -}
0a398b0535d44035e217dd2ad65efa7f
  tests45 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 'a') -}
2716bd7fede94d2ffb378a2d9ba6e603
  tests46 :: GHC.Stack.CallStack
  {- Unfolding: (GHC.Stack.CallStack Main.tests47) -}
8d561f33a69a19cb3160446b1f4c25c9
  tests47 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Test.HUnit.Base.@?=2
                   Main.tests48) -}
3bc5ecd910991f9201af95b906c9bb0d
  tests48 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Main.tests49
                   (GHC.Types.[] @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc))) -}
c3ef7fb1688089d606bfe4f0fd8a2e88
  tests49 :: ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
  {- Unfolding: ((Main.tests26, Main.tests50)) -}
2049580831b4c63d31ec5b90983131e2
  tests5 :: [Test.Framework.Core.Test]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Framework.Core.Test
                   Main.tests54
                   Main.tests6) -}
199588b944b574e106646dba4da30c91
  tests50 :: GHC.SrcLoc.SrcLoc
  {- Unfolding: (GHC.SrcLoc.SrcLoc
                   Main.tests25
                   Main.tests24
                   Main.tests23
                   Main.tests52
                   Main.tests40
                   Main.tests52
                   Main.tests51) -}
be739900504cdc7c39f2a31b4be1af27
  tests51 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 48) -}
9b858b0ceca6642a4da859b593d0b27f
  tests52 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 44) -}
f3ab4fe822a0b8120416ae18d5eded26
  tests53 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Lookup Leaf (Fail) {1 mark}"#) -}
03690689e51b1197b7fa2a2ac9a9d857
  tests54 :: Test.Framework.Core.Test
  {- Unfolding: (Test.Framework.Core.Test
                   @ Test.Framework.Providers.HUnit.TestCaseRunning
                   @ Test.Framework.Providers.HUnit.TestCaseResult
                   @ Test.Framework.Providers.HUnit.TestCase
                   Test.Framework.Providers.HUnit.$fTestlikeTestCaseRunningTestCaseResultTestCase
                   Test.Framework.Providers.HUnit.testCase1
                     `cast`
                   (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                             <*>_N <Test.Framework.Providers.HUnit.TestCase>_N))
                   Main.tests64
                   Main.tests55
                     `cast`
                   (Trans
                        (Sym (GHC.Types.NTCo:IO[0] <()>_R))
                        (Sym (Test.Framework.Providers.HUnit.NTCo:TestCase[0])))) -}
d24f71281eee8accb6ee0057593a070a
  tests55 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ eta2 :: GHC.Prim.State#
                             GHC.Prim.RealWorld[OneShot] ->
                 Test.HUnit.Base.@=?7
                   @ (GHC.Base.Maybe GHC.Types.Int)
                   Main.tests57
                     `cast`
                   (Sym (GHC.IP.NTCo:IP[0] <"loc">_N <GHC.Stack.CallStack>_N))
                   Main.$s$fEqMaybe
                   Main.$s$fShowMaybe
                   (GHC.Types.[] @ GHC.Types.Char)
                   (GHC.Base.Nothing @ GHC.Types.Int)
                   Main.tests56
                   eta2) -}
04e3901ea8fd110b59e58d2344b63f06
  tests56 :: GHC.Base.Maybe GHC.Types.Int
  {- Unfolding: (Lab03.treeLookup
                   @ GHC.Types.Char
                   @ GHC.Types.Int
                   GHC.Classes.$fOrdChar
                   Main.tests45
                   (Lab03.Empty @ GHC.Types.Char @ GHC.Types.Int)) -}
c7eec13393584f8064d845ea26316831
  tests57 :: GHC.Stack.CallStack
  {- Unfolding: (GHC.Stack.CallStack Main.tests58) -}
c46d546a15817d31f1d38a72937feb6e
  tests58 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Test.HUnit.Base.@?=2
                   Main.tests59) -}
5b3a3505a67ed1cfab66a4ef277c8756
  tests59 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Main.tests60
                   (GHC.Types.[] @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc))) -}
387a2cd2b12c99bbbac0e60c16a9f3c3
  tests6 :: [Test.Framework.Core.Test]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Framework.Core.Test
                   Main.tests42
                   Main.tests7) -}
15186f88a537558e8670b6558bd4d9f5
  tests60 :: ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
  {- Unfolding: ((Main.tests26, Main.tests61)) -}
1ab00b94a1c848b2062508d1f2dc41f2
  tests61 :: GHC.SrcLoc.SrcLoc
  {- Unfolding: (GHC.SrcLoc.SrcLoc
                   Main.tests25
                   Main.tests24
                   Main.tests23
                   Main.tests39
                   Main.tests63
                   Main.tests39
                   Main.tests62) -}
0dbbf2265118522427b078d0d11b211b
  tests62 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 40) -}
bcbc97ca20df96b26e478b8bca7ac5d5
  tests63 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 37) -}
84158642077eb22444f53648f9455161
  tests64 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Lookup Empty {1 mark}"#) -}
454bcd50e667c3f41d39b21b3d80c621
  tests65 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Lookup Tests (4 marks)"#) -}
1396b168aa8c836b3ec388514515c774
  tests66 :: Test.Framework.Core.Test
  {- Strictness: m2,
     Unfolding: (Test.Framework.Core.TestGroup
                   Main.tests120
                   Main.tests67) -}
a20138e051f9037f7ac809f48a7d455b
  tests67 :: [Test.Framework.Core.Test]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Framework.Core.Test
                   Main.tests110
                   Main.tests68) -}
71b8581b0a8e37a2bd11e6c1bc9dcf2a
  tests68 :: [Test.Framework.Core.Test]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Framework.Core.Test
                   Main.tests99
                   Main.tests69) -}
d213026522ad65ae6acf0bac534042fc
  tests69 :: [Test.Framework.Core.Test]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Framework.Core.Test
                   Main.tests87
                   Main.tests70) -}
126d77b8bb9f409c0a3372251d7a4ed3
  tests7 :: [Test.Framework.Core.Test]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Framework.Core.Test
                   Main.tests28
                   Main.tests8) -}
f7ee84fd02e715f1f427f3752e584712
  tests70 :: [Test.Framework.Core.Test]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Framework.Core.Test
                   Main.tests71
                   (GHC.Types.[] @ Test.Framework.Core.Test)) -}
81d5b76d5d0b4e6b729a3280ac83750d
  tests71 :: Test.Framework.Core.Test
  {- Unfolding: (Test.Framework.Core.Test
                   @ Test.Framework.Providers.HUnit.TestCaseRunning
                   @ Test.Framework.Providers.HUnit.TestCaseResult
                   @ Test.Framework.Providers.HUnit.TestCase
                   Test.Framework.Providers.HUnit.$fTestlikeTestCaseRunningTestCaseResultTestCase
                   Test.Framework.Providers.HUnit.testCase1
                     `cast`
                   (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                             <*>_N <Test.Framework.Providers.HUnit.TestCase>_N))
                   Main.tests86
                   Main.tests72
                     `cast`
                   (Trans
                        (Sym (GHC.Types.NTCo:IO[0] <()>_R))
                        (Sym (Test.Framework.Providers.HUnit.NTCo:TestCase[0])))) -}
96fceb1002fbc674c42390fca39c1a46
  tests72 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ eta2 :: GHC.Prim.State#
                             GHC.Prim.RealWorld[OneShot] ->
                 Test.HUnit.Base.@=?7
                   @ (Lab03.BinTree GHC.Types.Char GHC.Types.Int)
                   Main.tests78
                     `cast`
                   (Sym (GHC.IP.NTCo:IP[0] <"loc">_N <GHC.Stack.CallStack>_N))
                   Main.$s$fEqBinTree4
                   Main.$s$fShowBinTree6
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.tests73
                   Lab03.ins4
                   eta2) -}
5588b0d936763392f8d3651ab3d9b2c8
  tests73 :: Lab03.BinTree GHC.Types.Char GHC.Types.Int
  {- HasNoCafRefs,
     Unfolding: (Lab03.Branch
                   @ GHC.Types.Char
                   @ GHC.Types.Int
                   Main.tests76
                   Main.tests75
                   Main.tests74
                   (Lab03.Empty @ GHC.Types.Char @ GHC.Types.Int)) -}
b17e54e5844c28d2a5adb41e651a5ac9
  tests74 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 4) -}
f2159482fa2d6778f10b078550288374
  tests75 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 'd') -}
dc32b84ac0d6600cef2bca519ee0ed7e
  tests76 :: Lab03.BinTree GHC.Types.Char GHC.Types.Int
  {- HasNoCafRefs,
     Unfolding: (Lab03.Branch
                   @ GHC.Types.Char
                   @ GHC.Types.Int
                   (Lab03.Empty @ GHC.Types.Char @ GHC.Types.Int)
                   Main.tests31
                   Main.tests33
                   Main.tests77) -}
c518910d4ce507afa241cdec4155b901
  tests77 :: Lab03.BinTree GHC.Types.Char GHC.Types.Int
  {- HasNoCafRefs,
     Unfolding: (Lab03.Leaf
                   @ GHC.Types.Char
                   @ GHC.Types.Int
                   Main.tests12
                   Main.tests14) -}
bf3c83ed9c5bb59fb6e5425adacf9e7d
  tests78 :: GHC.Stack.CallStack
  {- Unfolding: (GHC.Stack.CallStack Main.tests79) -}
c7aaf5176c3c2c96de88bb09642836c7
  tests79 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Test.HUnit.Base.@?=2
                   Main.tests80) -}
2e886d42c06f842ad8921253ab30e22c
  tests8 :: [Test.Framework.Core.Test]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Framework.Core.Test
                   Main.tests9
                   (GHC.Types.[] @ Test.Framework.Core.Test)) -}
b4abb31a292fc7e06280bbfdcde0e623
  tests80 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Main.tests81
                   (GHC.Types.[] @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc))) -}
90654da1e024b36dafe92395de236e45
  tests81 :: ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
  {- Unfolding: ((Main.tests26, Main.tests82)) -}
a733e8100d2a01fe41eab60b4c705e68
  tests82 :: GHC.SrcLoc.SrcLoc
  {- Unfolding: (GHC.SrcLoc.SrcLoc
                   Main.tests25
                   Main.tests24
                   Main.tests23
                   Main.tests85
                   Main.tests84
                   Main.tests85
                   Main.tests83) -}
1c2bcb1b553d8861cea66be76c289b2a
  tests83 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 30) -}
ff46caa2b56bc2fce74f70b37ddbe62a
  tests84 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 27) -}
73d3d1a9f577fe24a5ca1072b1022ed8
  tests85 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 41) -}
93ee090be5e805d39d5d4538b8c716de
  tests86 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Insert Branch (Old) {1 mark}"#) -}
b77cfb7913842d28a9e411ed7694b6e3
  tests87 :: Test.Framework.Core.Test
  {- Unfolding: (Test.Framework.Core.Test
                   @ Test.Framework.Providers.HUnit.TestCaseRunning
                   @ Test.Framework.Providers.HUnit.TestCaseResult
                   @ Test.Framework.Providers.HUnit.TestCase
                   Test.Framework.Providers.HUnit.$fTestlikeTestCaseRunningTestCaseResultTestCase
                   Test.Framework.Providers.HUnit.testCase1
                     `cast`
                   (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                             <*>_N <Test.Framework.Providers.HUnit.TestCase>_N))
                   Main.tests98
                   Main.tests88
                     `cast`
                   (Trans
                        (Sym (GHC.Types.NTCo:IO[0] <()>_R))
                        (Sym (Test.Framework.Providers.HUnit.NTCo:TestCase[0])))) -}
f7acb270192f9d3ad889199ec6f92bfd
  tests88 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ eta2 :: GHC.Prim.State#
                             GHC.Prim.RealWorld[OneShot] ->
                 Test.HUnit.Base.@=?7
                   @ (Lab03.BinTree GHC.Types.Char GHC.Types.Int)
                   Main.tests93
                     `cast`
                   (Sym (GHC.IP.NTCo:IP[0] <"loc">_N <GHC.Stack.CallStack>_N))
                   Main.$s$fEqBinTree4
                   Main.$s$fShowBinTree6
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.tests89
                   Lab03.ins3
                   eta2) -}
a9cf5b7b551b0d9e5f8b4d51c3c9640d
  tests89 :: Lab03.BinTree GHC.Types.Char GHC.Types.Int
  {- HasNoCafRefs,
     Unfolding: (Lab03.Branch
                   @ GHC.Types.Char
                   @ GHC.Types.Int
                   Main.tests90
                   Main.tests75
                   Main.tests74
                   (Lab03.Empty @ GHC.Types.Char @ GHC.Types.Int)) -}
7a1f19a1697d8000545ae3098b2ed105
  tests9 :: Test.Framework.Core.Test
  {- Unfolding: (Test.Framework.Core.Test
                   @ Test.Framework.Providers.HUnit.TestCaseRunning
                   @ Test.Framework.Providers.HUnit.TestCaseResult
                   @ Test.Framework.Providers.HUnit.TestCase
                   Test.Framework.Providers.HUnit.$fTestlikeTestCaseRunningTestCaseResultTestCase
                   Test.Framework.Providers.HUnit.testCase1
                     `cast`
                   (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                             <*>_N <Test.Framework.Providers.HUnit.TestCase>_N))
                   Main.tests27
                   Main.tests10
                     `cast`
                   (Trans
                        (Sym (GHC.Types.NTCo:IO[0] <()>_R))
                        (Sym (Test.Framework.Providers.HUnit.NTCo:TestCase[0])))) -}
230cb4f44e34c04495e1ec5e4a4f074f
  tests90 :: Lab03.BinTree GHC.Types.Char GHC.Types.Int
  {- HasNoCafRefs,
     Unfolding: (Lab03.Branch
                   @ GHC.Types.Char
                   @ GHC.Types.Int
                   (Lab03.Empty @ GHC.Types.Char @ GHC.Types.Int)
                   Main.tests31
                   Main.tests33
                   Main.tests91) -}
4894c4e728318d8eefe65e5f4600fac7
  tests91 :: Lab03.BinTree GHC.Types.Char GHC.Types.Int
  {- HasNoCafRefs,
     Unfolding: (Lab03.Leaf
                   @ GHC.Types.Char
                   @ GHC.Types.Int
                   Main.tests12
                   Main.tests92) -}
52325704674160052bb3ec5f1e2ef1be
  tests92 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 3) -}
9dce661c4ebfd17ac597c745c97538d4
  tests93 :: GHC.Stack.CallStack
  {- Unfolding: (GHC.Stack.CallStack Main.tests94) -}
243dca744aa6cc1aa6f7f4a47501ce7a
  tests94 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Test.HUnit.Base.@?=2
                   Main.tests95) -}
a2d0be69c515e642a87996c0ef9ad179
  tests95 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Main.tests96
                   (GHC.Types.[] @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc))) -}
67b32cb8b605cadfaa4dff5bdee70e29
  tests96 :: ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
  {- Unfolding: ((Main.tests26, Main.tests97)) -}
aaec1b84af4d5911776ad25aceda3bbc
  tests97 :: GHC.SrcLoc.SrcLoc
  {- Unfolding: (GHC.SrcLoc.SrcLoc
                   Main.tests25
                   Main.tests24
                   Main.tests23
                   Main.tests62
                   Main.tests84
                   Main.tests62
                   Main.tests83) -}
198384c8427c05dd8029cfb6faacb7e7
  tests98 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Insert Branch (New) {2 marks}"#) -}
8d11ea5a9ca48a06905019e6f24bd2f3
  tests99 :: Test.Framework.Core.Test
  {- Unfolding: (Test.Framework.Core.Test
                   @ Test.Framework.Providers.HUnit.TestCaseRunning
                   @ Test.Framework.Providers.HUnit.TestCaseResult
                   @ Test.Framework.Providers.HUnit.TestCase
                   Test.Framework.Providers.HUnit.$fTestlikeTestCaseRunningTestCaseResultTestCase
                   Test.Framework.Providers.HUnit.testCase1
                     `cast`
                   (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                             <*>_N <Test.Framework.Providers.HUnit.TestCase>_N))
                   Main.tests109
                   Main.tests100
                     `cast`
                   (Trans
                        (Sym (GHC.Types.NTCo:IO[0] <()>_R))
                        (Sym (Test.Framework.Providers.HUnit.NTCo:TestCase[0])))) -}
a915d3300fcfa91d20020556c7dc37ce
  tests_nullX2 :: Lab03.BinTree GHC.Types.Int [t]
  {- HasNoCafRefs, Strictness: m3,
     Unfolding: (\ @ t ->
                 Lab03.Branch
                   @ GHC.Types.Int
                   @ [t]
                   (Lab03.Empty @ GHC.Types.Int @ [t])
                   Main.tests130
                   (GHC.Types.[] @ t)
                   (Lab03.Empty @ GHC.Types.Int @ [t])) -}
"SPEC/Main $fEqBinTree @ Char @ Int" [ALWAYS] forall $dEq :: GHC.Classes.Eq
                                                               GHC.Types.Char
                                                     $dEq1 :: GHC.Classes.Eq GHC.Types.Int
  Lab03.$fEqBinTree @ GHC.Types.Char @ GHC.Types.Int $dEq $dEq1
  = Main.$s$fEqBinTree4
"SPEC/Main $fEqBinTree @ Int @ Char" [ALWAYS] forall $dEq :: GHC.Classes.Eq
                                                               GHC.Types.Int
                                                     $dEq1 :: GHC.Classes.Eq GHC.Types.Char
  Lab03.$fEqBinTree @ GHC.Types.Int @ GHC.Types.Char $dEq $dEq1
  = Main.$s$fEqBinTree2
"SPEC/Main $fEqBinTree @ Int @ [Int]" [ALWAYS] forall $dEq :: GHC.Classes.Eq
                                                                GHC.Types.Int
                                                      $dEq1 :: GHC.Classes.Eq [GHC.Types.Int]
  Lab03.$fEqBinTree @ GHC.Types.Int @ [GHC.Types.Int] $dEq $dEq1
  = Main.$s$fEqBinTree
"SPEC/Main $fEqMaybe @ Int" [ALWAYS] forall $dEq :: GHC.Classes.Eq
                                                      GHC.Types.Int
  GHC.Base.$fEqMaybe @ GHC.Types.Int $dEq = Main.$s$fEqMaybe
"SPEC/Main $fShowBinTree @ Char @ Int" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                                   GHC.Types.Char
                                                       $dShow1 :: GHC.Show.Show GHC.Types.Int
  Lab03.$fShowBinTree @ GHC.Types.Char @ GHC.Types.Int $dShow $dShow1
  = Main.$s$fShowBinTree6
"SPEC/Main $fShowBinTree @ Int @ Char" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                                   GHC.Types.Int
                                                       $dShow1 :: GHC.Show.Show GHC.Types.Char
  Lab03.$fShowBinTree @ GHC.Types.Int @ GHC.Types.Char $dShow $dShow1
  = Main.$s$fShowBinTree3
"SPEC/Main $fShowBinTree @ Int @ [Int]" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                                    GHC.Types.Int
                                                        $dShow1 :: GHC.Show.Show [GHC.Types.Int]
  Lab03.$fShowBinTree @ GHC.Types.Int
                      @ [GHC.Types.Int]
                      $dShow
                      $dShow1
  = Main.$s$fShowBinTree
"SPEC/Main $fShowMaybe @ Int" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                          GHC.Types.Int
  GHC.Show.$fShowMaybe @ GHC.Types.Int $dShow = Main.$s$fShowMaybe
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

